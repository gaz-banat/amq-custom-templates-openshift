# Deploy broker as Deployment or StatefulSet
kind: Deployment

application:
  name: amq-broker-persistence
  amq_broker_version: 7.7
  amq_broker_image: registry.redhat.io/amq7/amq-broker
  pullPolicy: IfNotPresent
  volume_capacity: 1G

service:
  - name: jolokia
    description: "The Jolokia Management Console Service"
    protocol: TCP
    port: 8161
  - name: amqp
    description: "Plain AMQP protocol service endpoint"
    protocol: TCP
    port: 5672
  - name: mqtt
    description: "Plain MQTT protocol service endpoint"
    protocol: TCP
    port: 1883
  - name: stomp
    description: "Plain STOMP protocol service endpoint"
    protocol: TCP
    port: 61613
  - name: multiplex
    description: "Multiplexed protocol endpoint (CORE+All the others)"
    protocol: TCP
    port: 61616

nodeport:
  port: 30002
  service: multiplex
  enabled: true

parameters:
  amq_protocols: "openwire,amq,stomp,mqtt,hornetq,core"
  amq_admin_role: "admin"
  amq_broker_name: "broker"
  amq_global_max_size: "200 mb"
  amq_require_login: False
  amq_extra_args: ""
  amq_anycast_prefix: "jmx.queue."
  amq_multicast_prefix: "jmx.topic."
  amq_journal_type: "nio"
  amq_data_dir: "/opt/amq/data"
  amq_force_addresses_cleanup: True # if true remove all queues that are not declared here upon chart update

templates:
  service: "{{ .Values.application.name }}-svc"
  deployment: "{{ .Values.application.name }}-dc"
  route: "{{ .Values.application.name }}-route"
  broker_image: "{{ .Values.application.amq_broker_image }}:{{ .Values.application.amq_broker_version }}"
  override_cm: "{{ .Values.application.name }}-override-cm"
  config_cm: "{{ .Values.application.name }}-config-cm"
  app_secret: "{{ .Values.application.name }}-secret"
  pvc_name: "{{ .Values.application.name}}-persistent-volume"

security:
  enabled: true
  # Names of additional secrets to mount into configuration folder.
  secrets: []
  createSecret: true
  jaasUsers:
    # Secret key entry name for Username password properties file. Override when files is provided by existing Secret.
    key: artemis-users.properties

admin:
  user: admin
  password: password
  roles:
    - admin

# Create additional users
users: []
#  - name: demouser
#    password: "demo"
#    roles:
#      - user
#  - name: anotheruser
#    password: "demo1"
#    roles:
#      - user

# Create queues
queues:
  defaults:
    maxDeliveryAttempts: 3
    redeliveryDelayMultiplier: 1
    redeliveryDelay: 5000
    maxSizeBytes: "100 mb"
    addressFullPolicy: "PAGE"
    messageCounterHistoryDayLimit: 10
  addresses: []
#  - name: QUEUE_1
#    type: anycast # for queues, choose 'multicast' for topics
#    dlq_address: QUEUE_1_DLQ
#    expiry_address:
#    maxDeliveryAttempts:
#    redeliveryDelay:
#    redeliveryDelayMultiplier:
#    maxSizeBytes:
#    messageCounterHistoryDayLimit:
#    addressFullPolicy:
#    permissions:
#      - grant: consume
#        roles:
#          - admin
#          - user
#      - grant: browse
#        roles:
#          - admin
#          - user
#      - grant: send
#        roles:
#          - admin
#          - user
#      - grant: manage
#        roles:
#          - admin
#      #- grant: createNonDurableQueue # uncomment this when declaring topics (when type: multicast)
#      #  roles:
#      #    - admin
#      #    - user

# Add Metrics and Prometheus ServiceMonitor for collecting metrics
metrics:
  enabled: false
  jvm_memory: true
  jvm_gc: false
  jvm_threads: false
  servicemonitor:
    port: 8161
    interval: 20s